//------------------------------------------------------------------------------
// <auto-generated>
//     這個程式碼是由範本產生。
//
//     對這個檔案進行手動變更可能導致您的應用程式產生未預期的行為。
//     如果重新產生程式碼，將會覆寫對這個檔案的手動變更。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Reto.Models.DataBase
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class RetoSPViewEntities : DbContext
    {
        public RetoSPViewEntities()
            : base("name=RetoSPViewEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<string> sp_NewBackendGroupId()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_NewBackendGroupId");
        }
    
        public virtual ObjectResult<string> sp_NewBackendMenuId()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_NewBackendMenuId");
        }
    
        public virtual ObjectResult<string> sp_NewBackendPageId()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_NewBackendPageId");
        }
    
        public virtual ObjectResult<string> sp_NewBackendPermissionId()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_NewBackendPermissionId");
        }
    
        public virtual ObjectResult<string> sp_NewBackendUserId()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_NewBackendUserId");
        }
    
        public virtual ObjectResult<string> sp_NewFileId()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_NewFileId");
        }
    
        public virtual ObjectResult<sp_GetMenuByUser_Result2> sp_GetMenuByUser(string account, Nullable<int> isEmail)
        {
            var accountParameter = account != null ?
                new ObjectParameter("Account", account) :
                new ObjectParameter("Account", typeof(string));
    
            var isEmailParameter = isEmail.HasValue ?
                new ObjectParameter("IsEmail", isEmail) :
                new ObjectParameter("IsEmail", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetMenuByUser_Result2>("sp_GetMenuByUser", accountParameter, isEmailParameter);
        }
    }
}
